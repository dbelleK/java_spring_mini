글수정과삭제 권한


1.
-BoardController.java
@GetMapping("/read")
	public String read(@RequestParam("board_info_idx") int board_info_idx,
					   @RequestParam("content_idx") int content_idx,
					   Model model) {
		
		model.addAttribute("board_info_idx", board_info_idx);
		//수정할 글의 인텍스 번호 호출
		*** model.addAttribute("content_idx", content_idx); ***
		
		ContentBean readContentBean = boardService.getContentInfo(content_idx);
		model.addAttribute("readContentBean", readContentBean);
		
		model.addAttribute("loginUserBean", loginUserBean);
		
		return "board/read";
	}

-read.jsp
<div class="text-right">
	<a href="${root }board/main?board_info_idx=${board_info_idx}" class="btn btn-primary">목록보기</a>
	** <a href="${root }board/modify?board_info_idx=${board_info_idx}&content_idx=${content_idx}" class="btn btn-info">수정하기</a> **
	** <a href="${root }board/delete?board_info_idx=${board_info_idx}&content_idx=${content_idx}" class="btn btn-danger">삭제하기</a> **
	</c:if>
</div>
컴파일 소스 확인
=========================================================
2.로그인 정보와 작성자 정보 비교하기
-BoardMapper.java (a1.content_writer_idx 추가)
@Select("select a2.user_name as content_writer_name, " + 
			"       to_char(a1.content_date, 'YYYY-MM-DD') as content_date, " + 
			"       a1.content_subject, a1.content_text, a1.content_file, **a1.content_writer_idx  **" + 
			"from content_table a1, user_table a2 " + 
			"where a1.content_writer_idx = a2.user_idx " + 
			"      and content_idx = #{content_idx}")
	ContentBean getContentInfo(int content_idx);

-BoardController.java
로그인한 사용자 정보를 갖고 있는 빈 주입
@Resource(name = "loginUserBean")
private UserBean loginUserBean;

	@GetMapping("/read")
	public String read(@RequestParam("board_info_idx") int board_info_idx,
					   @RequestParam("content_idx") int content_idx,
					   Model model) {
		
		model.addAttribute("board_info_idx", board_info_idx);
		model.addAttribute("content_idx", content_idx);
		
		ContentBean readContentBean = boardService.getContentInfo(content_idx);
		model.addAttribute("readContentBean", readContentBean);
		
		*** model.addAttribute("loginUserBean", loginUserBean); ***
		
		return "board/read";
	}

-read.jsp
<div class="text-right">
	<a href="${root }board/main?board_info_idx=${board_info_idx}" class="btn btn-primary">목록보기</a>
	*** <c:if test="${loginUserBean.user_idx == readContentBean.content_writer_idx }"> ***
	<a href="${root }board/modify?board_info_idx=${board_info_idx}&content_idx=${content_idx}" class="btn btn-info">수정하기</a>
	<a href="${root }board/delete?board_info_idx=${board_info_idx}&content_idx=${content_idx}" class="btn btn-danger">삭제하기</a>
	</c:if>
</div>
로그인 사용자와 작성자 일치시 수정 삭제 가능
==================================================
3.

-CheckWriterInterceptor.java

public class CheckWriterInterceptor implements HandlerInterceptor{
	
	private UserBean loginUserBean;
	private BoardService boardService;
	//자동주입이 안되므로 생성자를 통하여 구현
	public CheckWriterInterceptor(UserBean loginUserBean, BoardService boardService) {
		// TODO Auto-generated constructor stub
		this.loginUserBean = loginUserBean;
		this.boardService = boardService;
	}
	
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		// TODO Auto-generated method stub
		
		//read.jsp에서 주입된 content_idx가져오기 
		String str1 = request.getParameter("content_idx");
		int content_idx = Integer.parseInt(str1); //형변환
		
		//현재 게시글정보 가져오기
		ContentBean currentContentBean = boardService.getContentInfo(content_idx);
		
		//작성한 사람의 글번호와 로그인한 사람의 글번호가 다르면
		if(currentContentBean.getContent_writer_idx() != loginUserBean.getUser_idx()) {
			//경로를 읽어와서
			String contextPath = request.getContextPath();
			//not_writer 호출
			response.sendRedirect(contextPath + "/board/not_writer");
			return false;
		}
		
		return true;
	}
}

-BoardController.java
	@GetMapping("/not_writer")
	public String not_writer() {
		return "board/not_writer";
	}

-not_writer.jsp 생성
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var='root' value="${pageContext.request.contextPath }/"/>
<script>
	alert('잘못된 접근입니다')
	location.href = '${root}main'
</script>

-ServletAppContext.java
           @Autowired
	private BoardService boardService;
	.....
	@Override
	public void addInterceptors(InterceptorRegistry registry) {
		// TODO Auto-generated method stub
		WebMvcConfigurer.super.addInterceptors(registry);
		
		TopMenuInterceptor topMenuInterceptor = new TopMenuInterceptor(topMenuService, loginUserBean);
		
		InterceptorRegistration reg1 = registry.addInterceptor(topMenuInterceptor);
		reg1.addPathPatterns("/**");
		
		CheckLoginInterceptor checkLoginInterceptor = new CheckLoginInterceptor(loginUserBean);
		InterceptorRegistration reg2 = registry.addInterceptor(checkLoginInterceptor);
		reg2.addPathPatterns("/user/modify", "/user/logout", "/board/*");
		reg2.excludePathPatterns("/board/main");
		
		*** CheckWriterInterceptor checkWriterInterceptor = new CheckWriterInterceptor(loginUserBean, boardService);
		InterceptorRegistration reg3 = registry.addInterceptor(checkWriterInterceptor);
		reg3.addPathPatterns("/board/modify", "/board/delete"); ***
	}

컴파일 -> 로그인 -> http://localhost:9010/MiniProjectJava/board/read?board_info_idx=1&content_idx=4
                     수정 http://localhost:9010/MiniProjectJava/board/modify?board_info_idx=1&content_idx=4
                     삭제 http://localhost:9010/MiniProjectJava/board/delete?board_info_idx=1&content_idx=4 (400번 error)
작성하지 않은 계정으로 로그인 후 실습	 -> 잘못된 접근
============================================================================




