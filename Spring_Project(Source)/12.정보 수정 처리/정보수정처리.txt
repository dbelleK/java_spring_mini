정보수정 처리
1. 정보수정페이지로 연결
-user/modify.jsp
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
...
<div class="card-body">
	<form:form action='${root }user/modify_pro' method='post' modelAttribute="modifyUserBean">
		<div class="form-group">
			<form:label path="user_name">이름</form:label>
			<!-- disabled="true"를 주면 button를 눌러서 modify_pro를 호출하때 서버로 전송되지 않음 -->
			<form:input path="user_name" class='form-control' disabled="true"/>

		</div>
		<div class="form-group">
			<form:label path="user_id">아이디</form:label>
			<form:input path="user_id" class='form-control' disabled="true"/>

		</div>
		<div class="form-group">
			<form:label path="user_pw">비밀번호</form:label>
			<form:password path="user_pw" class='form-control'/>
			<form:errors path='user_pw' style='color:red'/>
		</div>
		<div class="form-group">
			<form:label path="user_pw2">비밀번호 확인</form:label>
			<form:password path="user_pw2" class='form-control'/>
			<form:errors path='user_pw2' style='color:red'/>
		</div>
		<div class="form-group">
			<div class="text-right">
				<form:button class='btn btn-primary'>정보수정</form:button>
			</div>
		</div>
	</form:form>
</div>

-UserController.java
	@GetMapping("/modify")
	public String modify(@ModelAttribute("modifyUserBean") UserBean modifyUserBean) {
				
		return "user/modify";
	}

============================================================
XML
-user/modify.jsp 복 붙
-UserController.java 추가
	@GetMapping("/modify")
	public String modify(@ModelAttribute("modifyUserBean") UserBean modifyUserBean) {
				
		return "user/modify";
	}
====================================================
2. 값세팅하기
-UserMapper.java
	@Select("select user_id, user_name " +
		"from user_table " +
		"where user_idx = #{user_idx}")
	UserBean getModifyUserInfo(int user_idx);

-UserDao.java
public UserBean getModifyUserInfo(int user_idx) {
		return userMapper.getModifyUserInfo(user_idx);
	}

-UserService.java
//modifyUserBean : modify.jsp에서 주입받은 객체로 값을 가져옴
public void getModifyUserInfo(UserBean modifyUserBean) {
		UserBean tempModifyUserBean = userDao.getModifyUserInfo(loginUserBean.getUser_idx());
		
		modifyUserBean.setUser_id(tempModifyUserBean.getUser_id());
		modifyUserBean.setUser_name(tempModifyUserBean.getUser_name());
		modifyUserBean.setUser_idx(loginUserBean.getUser_idx());
	}

-UserController.java
	@GetMapping("/modify")
	public String modify(@ModelAttribute("modifyUserBean") UserBean modifyUserBean) {
		
		*** userService.getModifyUserInfo(modifyUserBean); ***
		
		return "user/modify";
	}
컴파일 값 세팅
====================================================
XML
-user_mapper.xml
	<select id="getModifyUserInfo" parameterType="java.lang.Integer" resultType="kr.co.softcampus.beans.UserBean">
		<![CDATA[
			select user_id, user_name
			from user_table
			where user_idx = #{user_idx}
		]]>
	</select>

-UserDao.java
public UserBean getModifyUserInfo(int user_idx) {
		return sqlSessionTemplate.selectOne("user.getModifyUserInfo", user_idx);
	}

-UserService.java
	//modifyUserBean : modify.jsp에서 주입받은 객체로 값을 가져옴
	public void getModifyUserInfo(UserBean modifyUserBean) {
		UserBean tempModifyUserBean = userDao.getModifyUserInfo(loginUserBean.getUser_idx());
		
		modifyUserBean.setUser_id(tempModifyUserBean.getUser_id());
		modifyUserBean.setUser_name(tempModifyUserBean.getUser_name());
		modifyUserBean.setUser_idx(loginUserBean.getUser_idx());
	}

-UserController.java
	@GetMapping("/modify")
	public String modify(@ModelAttribute("modifyUserBean") UserBean modifyUserBean) {
		
		*** userService.getModifyUserInfo(modifyUserBean); ***
		
		return "user/modify";
	}
=====================================================================
3.modify_pro.jsp와 유효성

- UserController.java
	@PostMapping("/modify_pro")
	public String modify_pro(@Valid @ModelAttribute("modifyUserBean") UserBean modifyUserBean, BindingResult result) {
		
		if(result.hasErrors()) {
			return "user/modify";
		}
		
		return "user/modify_success";
	}
컴파일 값이 없어지면서 유효성 검사됨
===================================================
솔루션
-modify.jsp
	<form:form action='${root }user/modify_pro' method='post' modelAttribute="modifyUserBean">
		<div class="form-group">
			<form:label path="user_name">이름</form:label>
			<!-- 컴파일시에 값이 사라짐 -->
			<%-- <form:input path="user_name" class="form-control" disabled="true"/> --%>
			<!-- readonly="true" : disabled="true" + read -->
			<form:input path="user_name" class="form-control" readonly="true"/>
		</div>
		<div class="form-group">
			<form:label path="user_id">아이디</form:label>
			<form:input path="user_id" class='form-control' readonly="true"/>
		</div>

===================================================================
-error_message.properties
Size.modifyUserBean.user_pw = 비밀번호는 4 ~ 20글자여야 합니다
Size.modifyUserBean.user_pw2 = 비밀번호는 4 ~ 20글자여야 합니다
Pattern.modifyUserBean.user_pw = 비밀번호는 영문대소문자, 숫자만 허용합니다
Pattern.modifyUserBean.user_pw2 = 비밀번호는 영문대소문자, 숫자만 허용합니다
NotEquals.modifyUserBean.user_pw = 비밀번호가 일치하지 않습니다
NotEquals.modifyUserBean.user_pw2 = 비밀번호가 일치하지 않습니다

-UserValidator.java
		//비번확인 또는 수정시
		if(beanName.equals("joinUserBean") || beanName.equals("modifyUserBean")) {
			if(userBean.getUser_pw().equals(userBean.getUser_pw2()) == false) {
				errors.rejectValue("user_pw", "NotEquals");
				errors.rejectValue("user_pw2", "NotEquals");
			}
		}
		//회원가입시 	
		if(beanName.equals("joinUserBean")) {
			
			if(userBean.isUserIdExist() == false) {
				errors.rejectValue("user_id", "DontCheckUserIdExist");
			}
		}
	}
비번 불일치시 유효성 검사에 걸림 비번 일치시 404
======================================
XML
- UserController.java
	@PostMapping("/modify_pro")
	public String modify_pro(@Valid @ModelAttribute("modifyUserBean") UserBean modifyUserBean, BindingResult result) {
		
		if(result.hasErrors()) {
			return "user/modify";
		}
		
		return "user/modify_success";
	}

-modify.jsp
	<form:form action='${root }user/modify_pro' method='post' modelAttribute="modifyUserBean">
		<div class="form-group">
			<form:label path="user_name">이름</form:label>
			<form:input path="user_name" class='form-control' readonly="true"/>
		</div>
		<div class="form-group">
			<form:label path="user_id">아이디</form:label>
			<form:input path="user_id" class='form-control' readonly="true"/>
		</div>


-error_message.properties
Size.modifyUserBean.user_pw = 비밀번호는 4 ~ 20글자여야 합니다
Size.modifyUserBean.user_pw2 = 비밀번호는 4 ~ 20글자여야 합니다
Pattern.modifyUserBean.user_pw = 비밀번호는 영문대소문자, 숫자만 허용합니다
Pattern.modifyUserBean.user_pw2 = 비밀번호는 영문대소문자, 숫자만 허용합니다
NotEquals.modifyUserBean.user_pw = 비밀번호가 일치하지 않습니다
NotEquals.modifyUserBean.user_pw2 = 비밀번호가 일치하지 않습니다

-UserValidator.java
		//비번확인 또는 수정시
		if(beanName.equals("joinUserBean") || beanName.equals("modifyUserBean")) {
			if(userBean.getUser_pw().equals(userBean.getUser_pw2()) == false) {
				errors.rejectValue("user_pw", "NotEquals");
				errors.rejectValue("user_pw2", "NotEquals");
			}
		}
		//회원가입시 	
		if(beanName.equals("joinUserBean")) {
			
			if(userBean.isUserIdExist() == false) {
				errors.rejectValue("user_id", "DontCheckUserIdExist");
			}
		}
	}
비번 불일치시 유효성 검사에 걸림 비번 일치시 404
======================================
4.업데이트
-UserMapper.java
	@Update("update user_table " +
			"set user_pw = #{user_pw} " +
			"where user_idx = #{user_idx}")
	void modifyUserInfo(UserBean modifyUserBean);

-UserDao.java
	public void modifyUserInfo(UserBean modifyUserBean) {
		userMapper.modifyUserInfo(modifyUserBean);
	}
-UserService.java
	public void modifyUserInfo(UserBean modifyUserBean) {
		
		modifyUserBean.setUser_idx(loginUserBean.getUser_idx());
		
		userDao.modifyUserInfo(modifyUserBean);
	}

-UserController.java
	@PostMapping("/modify_pro")
	public String modify_pro(@Valid @ModelAttribute("modifyUserBean") UserBean modifyUserBean, BindingResult result) {
		
		if(result.hasErrors()) {
			return "user/modify";
		}
		
		*** userService.modifyUserInfo(modifyUserBean); ***
		
		return "user/modify_success";
	}

-modify_success.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var='root' value='${pageContext.request.contextPath}/'/>
<script>
	alert('수정되었습니다')
	location.href = '${root}user/modify'
</script> 
====================================================================
XML
-user_mapper.xml
	<update id="modifyUserInfo" parameterType="kr.co.softcampus.beans.UserBean">
		<![CDATA[
			update user_table
			set user_pw = #{user_pw}
			where user_idx = #{user_idx}
		]]>
	</update>
-UserDao.java
	public void modifyUserInfo(UserBean modifyUserBean) {
		sqlSessionTemplate.update("user.modifyUserInfo", modifyUserBean);
	}

-UserService.java
	public void modifyUserInfo(UserBean modifyUserBean) {
		
		modifyUserBean.setUser_idx(loginUserBean.getUser_idx());
		
		userDao.modifyUserInfo(modifyUserBean);
	}

-UserController.java
	@PostMapping("/modify_pro")
	public String modify_pro(@Valid @ModelAttribute("modifyUserBean") UserBean modifyUserBean, BindingResult result) {
		
		if(result.hasErrors()) {
			return "user/modify";
		}
		
		*** userService.modifyUserInfo(modifyUserBean); ***
		
		return "user/modify_success";
	}

-modify_success.jsp 복 붙
========================================================================================

