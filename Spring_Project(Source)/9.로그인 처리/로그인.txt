로그인

1.로그인 상태 유 무 판단
-UserBean.java
	
	private boolean userLogin;
	(getter and setter)
        //초기값 로그인이 안되어 있는 상태
	public UserBean() {
		this.userIdExist = false;
		*** this.userLogin = false; ***
	}

-XML에 (복 붙)
-------------------------
-RootAppContext.java
	//이름으로 구분하여 등록
	@Bean("loginUserBean")
	@SessionScope
	public UserBean loginUserBean() {
		return new UserBean();
	}

잘주입되었는지 test
-HomeController.java
@Controller
public class HomeController {
	//이름을 통해서 주입시 @Resource 사용
//	@Resource(name = "loginUserBean")
//	private UserBean loginUserBean;
	
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home() {
//		System.out.println(loginUserBean);
		return "redirect:/main";
	}
}
컴파일후 주석처리
==============================================
XML
Bean 주입
-root-context.xml
 <bean class="kr.co.softsoldesk.beans.UserBean" id='loginUserBean' scope='session'/>

-HomeController.java
@Controller
public class HomeController {
	
//	@Resource(name = "loginUserBean")
//	@Lazy
//	private UserBean loginUserBean;
	
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home() {
		
//		System.out.println(loginUserBean);
		
		return "redirect:/main";
	}
}
컴파일후 주석처리:session은 브라우저에서 발생되는 최초의 요청되고 XML은 서버가 가동될때 요청을 하려고 하므로
@Lazy 처리를 하여 서버가동시가 아닌 브라우저의 요청이 있을때 신호가 발생되도록 함
========================================================================================================
2.
-user/login.jsp
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>

...
	<c:if test="${fail==true }">
		<div class="alert alert-danger">
			<h3>로그인 실패</h3>
			<p>아이디 비밀번호를 확인해주세요</p>
		</div>
	</c:if>

	<form:form action="${root }user/login_pro" method='post' modelAttribute="tempLoginUserBean">
		<div class="form-group">
			<form:label path="user_id">아이디</form:label>
			<form:input path="user_id" class='form-control'/>
			<form:errors path='user_id' style='color:red'/>
		</div>
		<div class="form-group">
			<form:label path="user_pw">비밀번호</form:label>
			<form:password path="user_pw" class='form-control'/>
			<form:errors path='user_pw' style='color:red'/>
		</div>
		<div class="form-group text-right">
			<form:button class='btn btn-primary'>로그인</form:button>
			<a href="${root }user/join" class="btn btn-danger">회원가입</a>
		</div>
	</form:form>

-UserController.java
@GetMapping("/login")
	public String login(@ModelAttribute("tempLoginUserBean") UserBean tempLoginUserBean) {

		return "user/login";
	}						

=================================================================
XML
-login.jsp 복 붙
-UserController.java 복붙

======================================================================
3. 유효성 검사 적용
-UserController.java


@PostMapping("/login_pro")
	public String login_pro(@Valid @ModelAttribute("tempLoginUserBean") UserBean tempLoginUserBean, BindingResult result) {
		
		if(result.hasErrors()) {
			return "user/login";
		}
		
			return "user/login_fail";
	}

-error_message.properties
Size.tempLoginUserBean.user_id = 사용자 아이디는 4 ~ 20글자여야 합니다
Size.tempLoginUserBean.user_pw = 비밀번호는 4 ~ 20글자여야 합니다
Pattern.tempLoginUserBean.user_id = 사용자 아이디는 영문대소문자, 숫자만 허용합니다
Pattern.tempLoginUserBean.user_pw = 비밀번호는 영문대소문자, 숫자만 허용합니다

컴파일 에러 'DontCheckUserIdExist'
---------------------------------------------------
-UserValidator.java
@Override
	public void validate(Object target, Errors errors) {
		// TODO Auto-generated method stub
		UserBean userBean = (UserBean)target;
		
		***String beanName = errors.getObjectName();*** //1차 솔루션
		//System.out.println(beanName);

                          //2차 솔루션
		***if(beanName.equals("joinUserBean")) {***
			if(userBean.getUser_pw().equals(userBean.getUser_pw2()) == false) {
				errors.rejectValue("user_pw", "NotEquals");
				errors.rejectValue("user_pw2", "NotEquals");
			}
			
			if(userBean.isUserIdExist() == false) {
				errors.rejectValue("user_id", "DontCheckUserIdExist");
			}
		}
	}
==========================================
XMK
복사 붙이기
-UserController.java
-error_message.properties
-UserValidator.java
=============================================================
4.로그인 실패

-오라클
select user_idx, user_name 
from user_table
where user_id='mermaid' and user_pw='12345';

-UserMapper.java
	@Select("select user_idx, user_name " + 
			"from user_table " + 
			"where user_id=#{user_id} and user_pw=#{user_pw}")
	UserBean getLoginUserInfo(UserBean tempLoginUserBean);

-UserDao.java
	public UserBean getLoginUserInfo(UserBean tempLoginUserBean) {
		return userMapper.getLoginUserInfo(tempLoginUserBean);
	}

-UserService.java
            //RootAppContext.java에서 주입한 부분
	@Resource(name = "loginUserBean")
	private UserBean loginUserBean;
               .....  
             public void getLoginUserInfo(UserBean tempLoginUserBean) {
		
		UserBean tempLoginUserBean2 = userDao.getLoginUserInfo(tempLoginUserBean);
		//가져온 데이터가 있다면
		if(tempLoginUserBean2 != null) {
			loginUserBean.setUser_idx(tempLoginUserBean2.getUser_idx());
			loginUserBean.setUser_name(tempLoginUserBean2.getUser_name());
			loginUserBean.setUserLogin(true);
		}
	}

-UserController.java
	//UserService.java에서 주입해옴
	@Resource(name = "loginUserBean")
	private UserBean loginUserBean;
	....
	@PostMapping("/login_pro")
	public String login_pro(@Valid @ModelAttribute("tempLoginUserBean") UserBean tempLoginUserBean, BindingResult result) {
		
		if(result.hasErrors()) {
			return "user/login";
		}
		
		*** userService.getLoginUserInfo(tempLoginUserBean);
		
		if(loginUserBean.isUserLogin() == fale) {
			return "user/login_fail";
		} else {
			return "user/login_success";
		} ****
	}

 	@GetMapping("/logout")
	public String logout() {
		
		*** loginUserBean.setUserLogin(false); ***
		
		return "user/logout";
	}


-login_fail.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var='root' value='${pageContext.request.contextPath}/'/>
<script>
	alert('로그인에 실패하였습니다')
	location.href = '${root}user/login?fail=true'
</script>
===============================================
XML
-user_mapper.xml
	<select id="getLoginUserInfo" parameterType="kr.co.softcampus.beans.UserBean" resultType="kr.co.softcampus.beans.UserBean">
		<![CDATA[
			select user_idx, user_name
			from user_table 
			where user_id=#{user_id} and user_pw=#{user_pw}
		]]>
	</select>

-UserDao.java
	public UserBean getLoginUserInfo(UserBean tempLoginUserBean) {
		return sqlSessionTemplate.selectOne("user.getLoginUserInfo", tempLoginUserBean);
	}

-UserService.java	
	@Resource(name = "loginUserBean")
	@Lazy
	private UserBean loginUserBean;
	....
           public void getLoginUserInfo(UserBean tempLoginUserBean) {
		
		UserBean tempLoginUserBean2 = userDao.getLoginUserInfo(tempLoginUserBean);
		
		if(tempLoginUserBean2 != null) {
			loginUserBean.setUser_idx(tempLoginUserBean2.getUser_idx());
			loginUserBean.setUser_name(tempLoginUserBean2.getUser_name());
			loginUserBean.setUserLogin(true);
		}
	}

-UserController.java
	@Resource(name = "loginUserBean")
	@Lazy
	private UserBean loginUserBean;
	.....
	@PostMapping("/login_pro")
	public String login_pro(@Valid @ModelAttribute("tempLoginUserBean") UserBean tempLoginUserBean, BindingResult result) {
		
		if(result.hasErrors()) {
			return "user/login";
		}
		
		userService.getLoginUserInfo(tempLoginUserBean);
		
		if(loginUserBean.isUserLogin() == true) {
			return "user/login_success";
		} else {
			return "user/login_fail";
		}
	}

-login_fail.jsp 복 붙
==========================================
5.로그인 성공
-UserController.java
@GetMapping("/login")
	public String login(@ModelAttribute("tempLoginUserBean") UserBean tempLoginUserBean,
			@RequestParam(value = "fail", defaultValue = "false") boolean fail, Model model) {
		
		model.addAttribute("fail", fail);
	
		return "user/login";
	}

-login.jsp
추가
*** <c:if test="${fail == true }"> ***
	<div class="alert alert-danger">
		<h3>로그인 실패</h3>
		<p>아이디 비밀번호를 확인해주세요</p>
	</div>
*** </c:if> ***

-login_success
=============================
XML
-UserController.java
	@GetMapping("/login")
	public String login(@ModelAttribute("tempLoginUserBean") UserBean tempLoginUserBean,
			@RequestParam(value = "fail", defaultValue = "false") boolean fail, Model model) {
		
		model.addAttribute("fail", fail);
	
		return "user/login";
	}
자바 복붙
-login.jsp
-login_success